// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// UrlRepository is an autogenerated mock type for the UrlRepository type
type UrlRepository struct {
	mock.Mock
}

// FindById provides a mock function with given fields: urlId
func (_m *UrlRepository) FindById(urlId string) (string, error) {
	ret := _m.Called(urlId)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(urlId)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(urlId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: urlId, url
func (_m *UrlRepository) Save(urlId string, url string) error {
	ret := _m.Called(urlId, url)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(urlId, url)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewUrlRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewUrlRepository creates a new instance of UrlRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUrlRepository(t mockConstructorTestingTNewUrlRepository) *UrlRepository {
	mock := &UrlRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
